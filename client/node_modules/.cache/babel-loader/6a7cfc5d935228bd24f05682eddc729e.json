{"ast":null,"code":"import _defineProperty from \"c:\\\\Users\\\\Dylan\\\\Documents\\\\reactAssignment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"c:\\\\Users\\\\Dylan\\\\Documents\\\\reactAssignment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\Dylan\\\\Documents\\\\reactAssignment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\Dylan\\\\Documents\\\\reactAssignment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\Dylan\\\\Documents\\\\reactAssignment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\Dylan\\\\Documents\\\\reactAssignment\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\Dylan\\\\Documents\\\\reactAssignment\\\\client\\\\src\\\\pages\\\\Books.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtnSearch, FormBtnSave } from \"../components/Form\";\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      savedMovies: [],\n      foundMovie: false,\n      searchInput: \"\",\n      title: \"\",\n      year: \"\",\n      actors: \"\"\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data,\n          title: \"\",\n          author: \"\",\n          synopsis: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      API.search(_this.state.searchInput).then(function (res) {\n        console.log(res);\n\n        _this.setState({\n          title: res.data.Title,\n          actors: res.data.Actors,\n          year: res.data.Year,\n          foundMovie: true\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.saveButton = function (event) {\n      event.preventDefault();\n      console.log(\"saving\");\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Search Movies\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.searchInput,\n        onChange: this.handleInputChange,\n        name: \"searchInput\",\n        placeholder: \"Search for a book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(FormBtnSearch, {\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Search\"))), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Saved movies to watch\")), this.state.savedMovies.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.savedMovies.map(function (movie) {\n        return React.createElement(ListItem, {\n          key: movie._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/books/\" + movie._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, movie.title)), React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return _this2.deleteBook(movie._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"No Results to Display\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        name: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.state.title), React.createElement(\"p\", {\n        name: \"year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.state.year), React.createElement(\"p\", {\n        name: \"actors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.actors), this.state.foundMovie ? React.createElement(FormBtnSave, {\n        onClick: function onClick() {\n          return console.log(\"hello\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Save\") : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["c:\\Users\\Dylan\\Documents\\reactAssignment\\client\\src\\pages\\Books.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtnSearch","FormBtnSave","Books","state","savedMovies","foundMovie","searchInput","title","year","actors","loadBooks","getBooks","then","res","setState","books","data","author","synopsis","catch","err","console","log","deleteBook","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","search","Title","Actors","Year","saveButton","length","map","movie","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtnSearch, FormBtnSave } from \"../components/Form\";\n\nclass Books extends Component {\n  state = {\n    savedMovies: [],\n    foundMovie: false,\n    searchInput: \"\",\n    title: \"\",\n    year: \"\",\n    actors: \"\"\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  \n  handleFormSubmit = event => {\n    event.preventDefault();\n      API.search(this.state.searchInput)\n        .then(res => {\n          console.log(res);\n          this.setState({title: res.data.Title, actors: res.data.Actors, year: res.data.Year, foundMovie: true })\n        })\n        .catch(err => console.log(err));\n    \n  };\n  saveButton = event => {\n    event.preventDefault();\n    console.log(\"saving\");\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>Search Movies</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.searchInput}\n                onChange={this.handleInputChange}\n                name=\"searchInput\"\n                placeholder=\"Search for a book\"\n              />\n              <FormBtnSearch\n                onClick={this.handleFormSubmit}\n              >\n                Search\n              </FormBtnSearch>\n            </form>\n          </Col>\n          \n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Saved movies to watch</h1>\n            </Jumbotron>\n            {this.state.savedMovies.length ? (\n              <List>\n                {this.state.savedMovies.map(movie => (\n                  <ListItem key={movie._id}>\n                    <Link to={\"/books/\" + movie._id}>\n                      <strong>\n                        {movie.title}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => this.deleteBook(movie._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n              <h1 name=\"title\">{this.state.title}</h1>\n              <p name=\"year\">{this.state.year}</p>\n              <p name=\"actors\">{this.state.actors}</p>\n              {this.state.foundMovie ? (<FormBtnSave onClick={() => console.log(\"hello\")} >Save</FormBtnSave>) : (<p></p>)}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}